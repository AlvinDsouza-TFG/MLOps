trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: mlops-aml-vg

stages:

  - stage: Training
    displayName: Train the model
    jobs:
      - template: templates/ci/Train.yml
        parameters:
          rm_service_connection: '$(RM_SERVICE_CONNECTION)'
          base_name: '$(BASE_NAME)'
          model_name: '$(MODEL_NAME)'
          train_cluster: '$(TRAIN_CLUSTER)'
          dataset_name: '$(DATASET_NAME)'

  - stage: RegisterModel
    displayName: Register the model
    jobs:
      # Perform an empty deploy job for approval (This is the way in Azure Devops)
      - deployment: Approval
        displayName: Approval for model registration
        environment: 'Test'

      - template: templates/cd/Register.yml
        parameters:
          rm_service_connection: '$(RM_SERVICE_CONNECTION)'
          base_name: '$(BASE_NAME)'
          model_name: '$(MODEL_NAME)'

  - stage: DeployToTest
    displayName: Deploy model to Test (Azure Container Instance)
    jobs:
      - template: templates/cd/DeployToTest.yml
        parameters:
          rm_service_connection: '$(RM_SERVICE_CONNECTION)'
          base_name: '$(BASE_NAME)'
          model_name: '$(MODEL_NAME)'

  - stage: DeployToProd
    displayName: Deploy to Prod with approval
    jobs:
      # Perform an empty deploy job for approval (This is the way in Azure Devops)
      - deployment: Approval
        displayName: Approval for rolling out to production
        environment: 'Prod'

      - template: templates/cd/DeployToProd.yml
        parameters:
          rm_service_connection: '$(RM_SERVICE_CONNECTION)'
          base_name: '$(BASE_NAME)'
          model_name: '$(MODEL_NAME)'
          aks_scoring_cluster: '$(AKS_SCORING_CLUSTER)'